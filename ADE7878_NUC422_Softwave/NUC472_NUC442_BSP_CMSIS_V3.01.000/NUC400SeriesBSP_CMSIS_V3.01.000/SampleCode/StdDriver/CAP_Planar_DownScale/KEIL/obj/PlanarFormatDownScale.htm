<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\PlanarFormatDownScale.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\PlanarFormatDownScale.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 481]: Last Updated: Fri Sep 11 11:49:16 2015
<BR><P>
<H3>Maximum Stack Usage =         96 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; PlanarFormatDownScale &rArr; InitNT99141_VGA_YUV422 &rArr; SWI2C_Write_8bitSlaveAddr_16bitReg_8bitData &rArr; SWI2C_WriteByte
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[a0]">Delay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a0]">Delay</a><BR>
 <LI><a href="#[f]">Default_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">Default_Handler</a><BR>
 <LI><a href="#[6f]">Delay</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6f]">Delay</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[71]">Reset_Handler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from retarget.o(.emb_text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[a]">BOD_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[b]">IRC_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[c]">PWRWU_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[d]">SRAMF_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[e]">CLKF_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[f]">Default_Handler</a> from startup_nuc472_442.o(.text) referenced 46 times from startup_nuc472_442.o(RESET)
 <LI><a href="#[10]">RTC_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[11]">TAMPER_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[12]">EINT0_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[13]">EINT1_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[14]">EINT2_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[15]">EINT3_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[16]">EINT4_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[17]">EINT5_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[18]">EINT6_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[19]">EINT7_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[1a]">GPA_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[1b]">GPB_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[1c]">GPC_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[1d]">GPD_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[1e]">GPE_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[1f]">GPF_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[20]">GPG_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[21]">GPH_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[22]">GPI_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[23]">TMR0_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[24]">TMR1_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[25]">TMR2_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[26]">TMR3_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[27]">PDMA_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[28]">ADC_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[29]">WDT_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[2a]">WWDT_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[2b]">EADC0_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[2c]">EADC1_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[2d]">EADC2_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[2e]">EADC3_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[2f]">ACMP_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[30]">OPA0_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[31]">OPA1_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[32]">ICAP0_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[33]">ICAP1_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[34]">PWM0CH0_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[35]">PWM0CH1_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[36]">PWM0CH2_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[37]">PWM0CH3_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[38]">PWM0CH4_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[39]">PWM0CH5_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[3a]">PWM0_BRK_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[3b]">QEI0_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[3c]">PWM1CH0_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[3d]">PWM1CH1_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[3e]">PWM1CH2_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[3f]">PWM1CH3_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[40]">PWM1CH4_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[41]">PWM1CH5_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[42]">PWM1_BRK_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[43]">QEI1_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[44]">EPWM0_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[45]">EPWM0BRK_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[46]">EPWM1_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[47]">EPWM1BRK_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[48]">USBD_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[49]">USBH_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[4a]">USB_OTG_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[4b]">EMAC_TX_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[4c]">EMAC_RX_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[4d]">SPI0_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[4e]">SPI1_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[4f]">SPI2_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[50]">SPI3_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[51]">UART0_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[52]">UART1_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[53]">UART2_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[54]">UART3_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[55]">UART4_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[56]">UART5_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[57]">I2C0_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[58]">I2C1_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[59]">I2C2_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[5a]">I2C3_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[5b]">I2C4_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[5c]">SC0_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[5d]">SC1_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[5e]">SC2_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[5f]">SC3_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[60]">SC4_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[61]">SC5_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[62]">CAN0_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[63]">CAN1_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[64]">I2S0_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[65]">I2S1_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[66]">SD_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[67]">PS2D_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[68]">CAP_IRQHandler</a> from main.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[69]">CRYPTO_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[6a]">CRC_IRQHandler</a> from startup_nuc472_442.o(.text) referenced from startup_nuc472_442.o(RESET)
 <LI><a href="#[6b]">main</a> from main.o(.text) referenced from entry7.o(.ARM.Collect$$$$00000007)
 <LI><a href="#[6c]">Hard_Fault_Handler</a> from retarget.o(.text) referenced from retarget.o(.emb_text)
 <LI><a href="#[6d]">SystemInit</a> from system_nuc472_442.o(.text) referenced from startup_nuc472_442.o(.text)
 <LI><a href="#[6e]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_nuc472_442.o(.text)
 <LI><a href="#[6f]">Delay</a> from sensor_nt99141.o(.text) referenced from sensor_nt99141.o(.text)
 <LI><a href="#[70]">fputc</a> from retarget.o(.text) referenced from printf8.o(i.__0printf$8)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[6e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(.text)
</UL>
<P><STRONG><a name="[b0]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[7b]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[ab]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b1]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, retarget.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, system_nuc472_442.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetCoreClock
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetCPUFreq
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPCLKFreq
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetHCLKFreq
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[6d]"></a>SystemInit</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, system_nuc472_442.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitClockReady
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(.text)
</UL>
<P><STRONG><a name="[71]"></a>Reset_Handler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>ACMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>CAN0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>CAN1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>CLKF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>CRC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>CRYPTO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>EADC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>EADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>EADC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>EADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EINT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EINT5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EINT6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EINT7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>EMAC_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>EMAC_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>EPWM0BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>EPWM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>EPWM1BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>EPWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>GPA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>GPB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>GPC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>GPD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>GPE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>GPF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>GPG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>GPH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>GPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>I2C3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>I2C4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>I2S0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>I2S1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>ICAP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>ICAP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>IRC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>OPA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>OPA1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>PDMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>PS2D_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>PWM0CH0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>PWM0CH1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>PWM0CH2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>PWM0CH3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>PWM0CH4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>PWM0CH5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>PWM0_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>PWM1CH0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>PWM1CH1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>PWM1CH2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>PWM1CH3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>PWM1CH4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>PWM1CH5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>PWM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PWRWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>QEI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>QEI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>SC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>SC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>SC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>SC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>SC4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>SC5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>SD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>SRAMF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TMR0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TMR1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TMR2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TMR3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>USBD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>USBH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>USB_OTG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>CAP_InterruptHandler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAP_IRQHandler
</UL>

<P><STRONG><a name="[68]"></a>CAP_IRQHandler</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = CAP_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAP_InterruptHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>CAP_SetFreq</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CAP_SetFreq &rArr; CLK_GetHCLKFreq &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_UnlockReg
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ResetModule
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_LockReg
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[86]"></a>SYS_Init</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SYS_Init &rArr; SYS_UnlockReg
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_UnlockReg
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_LockReg
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitClockReady
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>UART0_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART0_Init &rArr; UART_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ResetModule
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[89]"></a>PlanarFormatDownScale</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = PlanarFormatDownScale &rArr; InitNT99141_VGA_YUV422 &rArr; SWI2C_Write_8bitSlaveAddr_16bitReg_8bitData &rArr; SWI2C_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitNT99141_VGA_YUV422
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAP_Start
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAP_SetPlanarBuf
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAP_SetPacketStride
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAP_SetPacketScaling
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAP_SetCroppingWindow
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAP_Open
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAP_EnableInt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6b]"></a>main</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = main &rArr; PlanarFormatDownScale &rArr; InitNT99141_VGA_YUV422 &rArr; SWI2C_Write_8bitSlaveAddr_16bitReg_8bitData &rArr; SWI2C_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlanarFormatDownScale
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAP_SetFreq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[8a]"></a>InitNT99141_VGA_YUV422</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, sensor_nt99141.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = InitNT99141_VGA_YUV422 &rArr; SWI2C_Write_8bitSlaveAddr_16bitReg_8bitData &rArr; SWI2C_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Write_8bitSlaveAddr_16bitReg_8bitData
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Read_8bitSlaveAddr_16bitReg_8bitData
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Open
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlanarFormatDownScale
</UL>

<P><STRONG><a name="[9c]"></a>_SWI2C_SDA_SETIN</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, i2c_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Slave_ReadByte
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_ReadByte
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_WriteByte
</UL>

<P><STRONG><a name="[96]"></a>_SWI2C_SCK_SETOUT</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, i2c_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Open
</UL>

<P><STRONG><a name="[97]"></a>_SWI2C_SDA_SETOUT</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, i2c_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Slave_ReadByte
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_ReadByte
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_WriteByte
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_SendStop
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_SendStart
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Open
</UL>

<P><STRONG><a name="[93]"></a>SWI2C_Open</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, i2c_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SWI2C_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SWI2C_SDA_SETOUT
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SWI2C_SCK_SETOUT
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SWI2C_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitNT99141_VGA_YUV422
</UL>

<P><STRONG><a name="[b2]"></a>SWI2C_Close</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, i2c_gpio.o(.text), UNUSED)

<P><STRONG><a name="[99]"></a>SWI2C_SendStart</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, i2c_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SWI2C_SendStart
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SWI2C_SDA_SETOUT
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SWI2C_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Read_8bitSlaveAddr_8bitReg_8bitData
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Write_8bitSlaveAddr_8bitReg_8bitData
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Write_8bitSlaveAddr_16bitReg_8bitData
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Read_8bitSlaveAddr_16bitReg_8bitData
</UL>

<P><STRONG><a name="[9a]"></a>SWI2C_SendStop</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, i2c_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SWI2C_SendStop
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SWI2C_SDA_SETOUT
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SWI2C_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Read_8bitSlaveAddr_8bitReg_8bitData
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Write_8bitSlaveAddr_8bitReg_8bitData
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Write_8bitSlaveAddr_16bitReg_8bitData
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Read_8bitSlaveAddr_16bitReg_8bitData
</UL>

<P><STRONG><a name="[9b]"></a>SWI2C_WriteByte</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, i2c_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SWI2C_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SWI2C_SDA_SETOUT
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SWI2C_SDA_SETIN
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SWI2C_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Read_8bitSlaveAddr_8bitReg_8bitData
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Write_8bitSlaveAddr_8bitReg_8bitData
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Write_8bitSlaveAddr_16bitReg_8bitData
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Read_8bitSlaveAddr_16bitReg_8bitData
</UL>

<P><STRONG><a name="[9d]"></a>SWI2C_ReadByte</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, i2c_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SWI2C_ReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SWI2C_SDA_SETOUT
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SWI2C_SDA_SETIN
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SWI2C_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Read_8bitSlaveAddr_8bitReg_8bitData
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Read_8bitSlaveAddr_16bitReg_8bitData
</UL>

<P><STRONG><a name="[9e]"></a>SWI2C_Slave_ReadByte</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, i2c_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SWI2C_SDA_SETOUT
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SWI2C_SDA_SETIN
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SWI2C_Delay
</UL>

<P><STRONG><a name="[9f]"></a>SWI2C_Write_8bitSlaveAddr_8bitReg_8bitData</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, i2c_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_WriteByte
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_SendStop
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_SendStart
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>

<P><STRONG><a name="[a1]"></a>SWI2C_Read_8bitSlaveAddr_8bitReg_8bitData</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, i2c_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_ReadByte
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_WriteByte
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_SendStop
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_SendStart
</UL>

<P><STRONG><a name="[95]"></a>SWI2C_Read_8bitSlaveAddr_16bitReg_8bitData</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, i2c_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SWI2C_Read_8bitSlaveAddr_16bitReg_8bitData &rArr; SWI2C_ReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_ReadByte
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_WriteByte
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_SendStop
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_SendStart
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitNT99141_VGA_YUV422
</UL>

<P><STRONG><a name="[94]"></a>SWI2C_Write_8bitSlaveAddr_16bitReg_8bitData</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, i2c_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SWI2C_Write_8bitSlaveAddr_16bitReg_8bitData &rArr; SWI2C_WriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_WriteByte
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_SendStop
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_SendStart
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitNT99141_VGA_YUV422
</UL>

<P><STRONG><a name="[6c]"></a>Hard_Fault_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, retarget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Hard_Fault_Handler &rArr; stackDump &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stackDump
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> retarget.o(.emb_text)
</UL>
<P><STRONG><a name="[73]"></a>SendChar_ToUART</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, retarget.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[74]"></a>SendChar</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar_ToUART
</UL>

<P><STRONG><a name="[75]"></a>GetChar</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
</UL>

<P><STRONG><a name="[76]"></a>kbhit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[77]"></a>IsDebugFifoEmpty</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[78]"></a>_ttywrch</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar_ToUART
</UL>

<P><STRONG><a name="[70]"></a>fputc</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, retarget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar_ToUART
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0printf$8)
</UL>
<P><STRONG><a name="[79]"></a>fgetc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChar
</UL>

<P><STRONG><a name="[7a]"></a>ferror</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, retarget.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[8c]"></a>CAP_Open</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, cap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CAP_Open
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlanarFormatDownScale
</UL>

<P><STRONG><a name="[8d]"></a>CAP_SetCroppingWindow</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, cap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CAP_SetCroppingWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlanarFormatDownScale
</UL>

<P><STRONG><a name="[b3]"></a>CAP_SetPacketBuf</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cap.o(.text), UNUSED)

<P><STRONG><a name="[8e]"></a>CAP_SetPlanarBuf</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlanarFormatDownScale
</UL>

<P><STRONG><a name="[b4]"></a>CAP_Close</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cap.o(.text), UNUSED)

<P><STRONG><a name="[8b]"></a>CAP_EnableInt</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlanarFormatDownScale
</UL>

<P><STRONG><a name="[b5]"></a>CAP_DisableInt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cap.o(.text), UNUSED)

<P><STRONG><a name="[91]"></a>CAP_Start</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlanarFormatDownScale
</UL>

<P><STRONG><a name="[b6]"></a>CAP_Stop</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, cap.o(.text), UNUSED)

<P><STRONG><a name="[8f]"></a>CAP_SetPacketScaling</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, cap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CAP_SetPacketScaling
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlanarFormatDownScale
</UL>

<P><STRONG><a name="[b7]"></a>CAP_SetPlanarScaling</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, cap.o(.text), UNUSED)

<P><STRONG><a name="[90]"></a>CAP_SetPacketStride</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, cap.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlanarFormatDownScale
</UL>

<P><STRONG><a name="[b8]"></a>CAP_SetPlanarStride</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cap.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>CAP_EnableMotionDet</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, cap.o(.text), UNUSED)

<P><STRONG><a name="[ba]"></a>CAP_DisableMotionDet</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cap.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>CLK_DisableCKO</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, clk.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>CLK_EnableCKO</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, clk.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>CLK_PowerDown</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, clk.o(.text), UNUSED)

<P><STRONG><a name="[be]"></a>CLK_Idle</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clk.o(.text), UNUSED)

<P><STRONG><a name="[a2]"></a>CLK_GetPCLKFreq</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, clk.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[bf]"></a>CLK_GetHXTFreq</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, clk.o(.text), UNUSED)

<P><STRONG><a name="[c0]"></a>CLK_GetLXTFreq</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, clk.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>CLK_GetHCLKFreq</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, clk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLK_GetHCLKFreq &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAP_SetFreq
</UL>

<P><STRONG><a name="[a3]"></a>CLK_GetCPUFreq</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, clk.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[7e]"></a>CLK_GetPLLClockFreq</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, clk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetLine_Config
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnablePLL
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[a4]"></a>CLK_SetHCLK</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, clk.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetCoreClock
</UL>

<P><STRONG><a name="[7f]"></a>CLK_WaitClockReady</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, clk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnablePLL
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetCoreClock
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[a5]"></a>CLK_SetCoreClock</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, clk.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitClockReady
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[c1]"></a>CLK_SetModuleClock</STRONG> (Thumb, 82 bytes, Stack size 12 bytes, clk.o(.text), UNUSED)

<P><STRONG><a name="[c2]"></a>CLK_EnableXtalRC</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, clk.o(.text), UNUSED)

<P><STRONG><a name="[c3]"></a>CLK_DisableXtalRC</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, clk.o(.text), UNUSED)

<P><STRONG><a name="[c4]"></a>CLK_EnableModuleClock</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, clk.o(.text), UNUSED)

<P><STRONG><a name="[c5]"></a>CLK_DisableModuleClock</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, clk.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>CLK_EnablePLL</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, clk.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitClockReady
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
</UL>

<P><STRONG><a name="[c6]"></a>CLK_DisablePLL</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, clk.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>CLK_SetSysTickClockSrc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, clk.o(.text), UNUSED)

<P><STRONG><a name="[c8]"></a>CLK_SysTickDelay</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, clk.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>SYS_ClearResetSrc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sys.o(.text), UNUSED)

<P><STRONG><a name="[ca]"></a>SYS_GetBODStatus</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sys.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>SYS_GetResetSrc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys.o(.text), UNUSED)

<P><STRONG><a name="[cc]"></a>SYS_IsRegLocked</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sys.o(.text), UNUSED)

<P><STRONG><a name="[85]"></a>SYS_LockReg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAP_SetFreq
</UL>

<P><STRONG><a name="[82]"></a>SYS_UnlockReg</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, sys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SYS_UnlockReg
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAP_SetFreq
</UL>

<P><STRONG><a name="[cd]"></a>SYS_ReadPDID</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys.o(.text), UNUSED)

<P><STRONG><a name="[ce]"></a>SYS_ResetChip</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sys.o(.text), UNUSED)

<P><STRONG><a name="[cf]"></a>SYS_ResetCPU</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sys.o(.text), UNUSED)

<P><STRONG><a name="[83]"></a>SYS_ResetModule</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sys.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAP_SetFreq
</UL>

<P><STRONG><a name="[d0]"></a>SYS_EnableBOD</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sys.o(.text), UNUSED)

<P><STRONG><a name="[d1]"></a>SYS_DisableBOD</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sys.o(.text), UNUSED)

<P><STRONG><a name="[d2]"></a>UART_ClearIntFlag</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[d3]"></a>UART_Close</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[d4]"></a>UART_DisableFlowCtrl</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[d5]"></a>UART_DisableInt</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[d6]"></a>UART_EnableFlowCtrl</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[d7]"></a>UART_EnableInt</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>UART_Open</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
</UL>

<P><STRONG><a name="[d8]"></a>UART_Read</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>UART_SetLine_Config</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetPLLClockFreq
</UL>

<P><STRONG><a name="[d9]"></a>UART_SetTimeoutCnt</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[da]"></a>UART_SelectIrDAMode</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[db]"></a>UART_SelectRS485Mode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[dc]"></a>UART_Write</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[a8]"></a>__aeabi_uldivmod</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[7c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[dd]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[aa]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[de]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[a9]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[df]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[ac]"></a>__0printf$8</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[e0]"></a>__1printf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8), UNUSED)

<P><STRONG><a name="[92]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0printf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hard_Fault_Handler
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stackDump
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitNT99141_VGA_YUV422
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlanarFormatDownScale
</UL>

<P><STRONG><a name="[e1]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[e2]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[e3]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[f]"></a>Default_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc472_442.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc472_442.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>Delay</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sensor_nt99141.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sensor_nt99141.o(.text)
</UL>
<P><STRONG><a name="[98]"></a>_SWI2C_Delay</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, i2c_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Slave_ReadByte
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_ReadByte
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_WriteByte
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_SendStop
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_SendStart
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Open
</UL>

<P><STRONG><a name="[a0]"></a>Delay</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, i2c_gpio.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Write_8bitSlaveAddr_8bitReg_8bitData
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2C_Write_8bitSlaveAddr_16bitReg_8bitData
</UL>

<P><STRONG><a name="[72]"></a>stackDump</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, retarget.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = stackDump &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hard_Fault_Handler
</UL>

<P><STRONG><a name="[ad]"></a>_printf_core</STRONG> (Thumb, 1064 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$8
</UL>

<P><STRONG><a name="[af]"></a>_printf_post_padding</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[ae]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
